

const fs = require('fs');
const config = require('../settings');
const { lee, commands } = require('../lee');
const axios = require('axios');
const { getPrefix } = require('../lib/prefix');



lee({
    pattern: "menu3",
    react: "ü§ñ",
    alias: ["menu3"],
    desc: "Get command list",
    category: "main",
    filename: __filename
},
async (conn, mek, m, {
    from, quoted, pushname, reply
}) => {
    try {
        let menu = {
            download: '', group: '', fun: '', owner: '',
            ai: '', anime: '', convert: '', reaction: '',
            main: '', logo: '', settings: '', other: ''
        };
        


        for (let i = 0; i < commands.length; i++) {
            let cmd = commands[i];
            if (cmd.pattern && !cmd.dontAddCommandList && menu.hasOwnProperty(cmd.category)) {
                menu[cmd.category] += `‚îÇ ‚¨° ${cmd.pattern}\n`;
            }
        }
        const prefix = getPrefix();

        let madeMenu = `
‚ï≠‚îÄ‚ùç ü§ñ *${config.BOT_NAME}* ‚ùç
‚îÜ üë§ ·¥ús·¥á Ä: @${m.sender.split("@")[0]}
‚îÜ üåê ·¥ç·¥è·¥Ö·¥á: [${config.MODE}]
‚îÜ ‚ú® ·¥ò Ä·¥á“ì…™x: [${prefix}]
‚îÜ üìã ·¥õ·¥è·¥õ·¥Ä ü ·¥Ñ·¥ç·¥Ös: ${commands.length}
‚îÜ üëë ·¥Ö·¥á·¥†:  Íú±·¥Ä…¥…¢  ü·¥á·¥á
‚îÜ üìå ·¥†·¥á Äs…™·¥è…¥: ${config.version}-·¥Ä ü·¥ò ú·¥Ä
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ú¶

‚îå‚îÄ‚îÄ„Äé üëë ·¥ç·¥Ä…™…¥ ·¥Ñ…¥·¥Ös üëë  „Äè
${menu.main || '‚îÇ (No commands found)'}
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ú¶

‚îå‚îÄ‚îÄ„Äé üì• ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö ·¥Ñ·¥ç·¥Ös üì• „Äè
${menu.download || '‚îÇ (No commands found)'}
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ú¶

‚îå‚îÄ‚îÄ„Äé üßë‚Äçüíª ·¥è·¥°…¥·¥á Ä ·¥Ñ·¥ç·¥Ös üßë‚Äçüíª „Äè
${menu.owner || '‚îÇ (No commands found)'}
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ú¶

‚îå‚îÄ‚îÄ„Äé üß† ·¥Ä…™ ·¥Ñ·¥ç·¥Ös üß†„Äè
${menu.ai || '‚îÇ (No commands found)'}
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ú¶

‚îå‚îÄ‚îÄ„Äé üë• …¢ Ä·¥è·¥ú·¥ò ·¥Ñ·¥ç·¥Ös üë• „Äè
${menu.group || '‚îÇ (No commands found)'}
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ú¶

‚îå‚îÄ‚îÄ„Äé ‚ú® ·¥Ä…¥…™·¥ç·¥á ·¥Ñ·¥ç·¥Ös ‚ú® „Äè
${menu.anime || '‚îÇ (No commands found)'}
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ú¶

‚îå‚îÄ‚îÄ„Äé üîÑ ·¥Ñ·¥è…¥·¥†·¥á Ä·¥õ ·¥Ñ·¥ç·¥Ös üîÑ „Äè
${menu.convert || '‚îÇ (No commands found)'}
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ú¶

‚îå‚îÄ‚îÄ„Äé üé≠  Ä·¥á·¥Ä·¥Ñ·¥õ…™·¥è…¥ ·¥Ñ·¥ç·¥Ös üé≠ „Äè
${menu.reaction || '‚îÇ (No commands found)'}
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ú¶

‚îå‚îÄ‚îÄ„Äé üéâ “ì·¥ú…¥ ·¥Ñ·¥çs üéâ „Äè
${menu.fun || '‚îÇ (No commands found)'}
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ú¶

‚îå‚îÄ‚îÄ„Äé üé®  ü·¥è…¢·¥è ·¥Ñ·¥ç·¥Ös üé® „Äè
${menu.logo || '‚îÇ (No commands found)'}
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ú¶

‚îå‚îÄ‚îÄ„Äé ü™Ñ s·¥á·¥õ·¥õ…™…¥…¢s ·¥Ñ·¥ç·¥Ös ü™Ñ „Äè
${menu.settings || '‚îÇ (No commands found)'}
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ú¶

‚îå‚îÄ‚îÄ„Äé üïµÔ∏è‚Äç‚ôÇÔ∏è ·¥è·¥õ ú·¥á Ä ·¥Ñ·¥ç·¥Ös üïµÔ∏è‚Äç‚ôÇÔ∏è „Äè
${menu.other || '‚îÇ (No commands found)'}
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ú¶

> ${config.DESCRIPTION}
`;

        await conn.sendMessage(
            from,
            {
                image: { url: config.MENU_IMAGE_URL },
                caption: madeMenu,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 999,
                    isForwarded: true,
                    forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363403627964616@newsletter',
                        newsletterName: '·¥ò·¥á·¥Ä·¥ã è- ô ü…™…¥·¥Ö·¥á Ä-·¥ç·¥Ö',
                        serverMessageId: 143
                    }
                }
            },
            { quoted: mek }
        );

        await conn.sendMessage(from, {
      audio: { url: 'https://o.uguu.se/bENmpXKa.mp3' },
      mimetype: 'audio/mp4',
      ptt: true
    }, { quoted: mek });
    

    } catch (e) {
        console.error(e);
        reply(`${e}`);
    }
});
